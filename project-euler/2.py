'''
https://projecteuler.net/archives ; id=2

Each new term in the Fibonacci sequence is generated by adding the 
previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values 
do not exceed four million, find the sum of the even-valued terms.

'''
#todo: more elegant approach, maybe task-specific

def generate_fibonacci(number_of_new_elements, output_sequence = []):
    if len(output_sequence) == 0 and number_of_new_elements != 0: 
        output_sequence.append(1) #assume "classic" fibonacci
        number_of_new_elements -= 1
    if len(output_sequence) == 1  and number_of_new_elements != 0: 
        output_sequence.append(2) #assume "classic" fibonacci
        number_of_new_elements -= 1

    for i in range (number_of_new_elements):
        output_sequence.append(output_sequence[-1] + output_sequence[-2])
    return output_sequence

#recursive done 4 fun
#todo: think - is this really done OK?
def generate_fibonacci_recursive(number_of_new_elements, output_sequence = []):
    if len(output_sequence) == 0 and number_of_new_elements != 0: 
        output_sequence.append(1) #assume "classic" fibonacci
        number_of_new_elements -= 1
    if len(output_sequence) == 1  and number_of_new_elements != 0:  
        output_sequence.append(2) #assume "classic" fibonacci
        number_of_new_elements -= 1
    
    if number_of_new_elements != 0:  
        output_sequence.append(output_sequence[-1] + output_sequence[-2])
        output_sequence = generate_fibonacci_recursive(number_of_new_elements-1,output_sequence)
    return output_sequence

'''
fib1 = generate_fibonacci_recursive(5)
print (fib1)

#fib2 = generate_fibonacci(5,fib1)
#apparently created once
fib2 = generate_fibonacci_recursive(5)
print (fib2)

print (generate_fibonacci_recursive(5,fib1))
'''


fib = generate_fibonacci(1) 
evens_sum = 0
while fib[-1] <= 4000000:
    fib = generate_fibonacci(1,fib) 
    if fib[-1] % 2 == 0:
        evens_sum += fib[-1]
    print("Next element:",fib)
print("sum of even numbers:",evens_sum)
